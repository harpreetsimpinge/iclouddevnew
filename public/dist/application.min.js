"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("calendar"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("exports"),ApplicationConfiguration.registerModule("library"),ApplicationConfiguration.registerModule("template"),ApplicationConfiguration.registerModule("users",["core","ui.bootstrap"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),angular.module("articles",["ngDialog","ui.mask","ngMaterial","ngAnimate","ngAria","toastr","daterangepicker","angular.filter","ui.bootstrap","mdPickers","isteven-multi-select","textAngular","ngclipboard","froala"]).run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Claimants Management Center",state:"articles",type:"dropdown",roles:["user","user2","admin1","admin2","admin"]}),Menus.addSubMenuItem("topbar","articles",{title:"Search",state:"articles.list",roles:["user","user2","admin2","admin"]}),Menus.addSubMenuItem("topbar","articles",{title:"Bulk Edit",state:"articles.bulk",roles:["admin1","admin2","admin"]}),Menus.addSubMenuItem("topbar","articles",{title:"Add New Claimants",state:"articles.create",roles:["admin1","admin2","admin"]}),Menus.addSubMenuItem("topbar","articles",{title:"Edit Fields",state:"articles.fields",roles:["admin1","admin2","admin"]})}]),angular.module("articles").service("fileUpload",["$http",function($http){this.uploadFileToUrl=function(data_,file,uploadUrl,cb){var fd=new FormData;fd.append("file",file),fd.append("address",data_),$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(data){cb(data)}).error(function(err){console.log(err)})}}]),angular.module("articles").value("froalaConfig",{toolbarInline:!1,placeholderText:"Enter Text Here"}),angular.module("articles").directive("myDraggable",["$document","$http",function($document,$http){return{restrict:"A",scope:{article:"=article"},templateUrl:"/modules/articles/client/views/side.client.view.html",link:function(scope,element,attr){function getFields(){$http.get("/api/fields/all-fields").then(function(response){scope.fields=response.data,scope.requiredFileds=[],scope.otherFileds=[];for(var k in scope.fields)"_id"!==k&&"user"!==k&&("Contact"===scope.fields[k].category?scope.requiredFileds.push(scope.fields[k]):scope.otherFileds.push(scope.fields[k]));for(var j in response.data){var found=!1;for(var i in scope.cats)scope.cats[i]===response.data[j].category&&(found=!0);found===!1&&scope.cats.push(response.data[j].category)}},function(response){scope.data=response.data||"Request failed"})}function sortFields(input){var array=[],other_arr=[];for(var objectKey in input)void 0!==objectKey&&angular.isObject(input[objectKey])&&"permissions"!==objectKey&&"legacy"!==objectKey?array.push(input[objectKey]):other_arr.push(input[objectKey]);return array.sort(function(a,b){return null===a.id||null===b.id?0:a.id.order-b.id.order}),array}function mousemove(event){y=event.pageY-startY,x=event.pageX-startX,element.css({top:y+"px",left:x+"px"})}function mouseup(){$document.off("mousemove",mousemove),$document.off("mouseup",mouseup)}var startX=0,startY=0,x=0,y=0;scope.cats=[],scope.fields||getFields(),scope.$watch("article",function(newValue,oldValue){$http.get("/api/articles/"+newValue).then(function(response){scope.article_sort=sortFields(response.data)})}),element.css({position:"relative",cursor:"pointer"}),element.on("mousedown",function(event){event.preventDefault(),startX=event.pageX-x,startY=event.pageY-y,$document.on("mousemove",mousemove),$document.on("mouseup",mouseup)})}}}]),angular.module("articles").service("fileUpload",["$http",function($http){this.uploadFileToUrl=function(data_,file,uploadUrl,cb){var fd=new FormData;fd.append("file",file),fd.append("address",data_),$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(data){cb(data)}).error(function(err){console.log(err)})}}]),angular.module("articles").directive("addNote",["$document","$http","FileUploader","toastr","$rootScope",function($document,$http,FileUploader,toastr,$rootScope){return{restrict:"A",scope:{article:"=article"},templateUrl:"/modules/articles/client/views/addNote.client.view.html",link:function(scope,element,attr){function mousemove(event){y=event.pageY-startY,x=event.pageX-startX,element.css({top:y+"px",left:x+"px"})}function mouseup(){$document.off("mousemove",mousemove),$document.off("mouseup",mouseup)}var startX=0,startY=0,x=0,y=0;scope.cats=[],scope.newNote={files:[],filesShow:[],date:new Date,RTWregpermFocusInformation:new Date,RTWtransFocusInformation:new Date},scope.froalaOptions={toolbarButtons:["undo","redo","|","bold","italic","underline","strikethrough","subscript","superscript","outdent","indent","clearFormatting","insertTable","html"],toolbarButtonsXS:["undo","redo","-","bold","italic","underline"],key:"md1hkC-11ydbdmcE-13dvD1wzF-7=="},scope.$watch("article",function(newValue,oldValue){console.log(newValue),$http.get("/api/articles/"+newValue).then(function(response){scope.file=response.data})}),scope.uploader=new FileUploader({url:"/api/dropdpc/uploadfile",alias:"uploadFile"}),scope.uploader.onAfterAddingFile=function(){scope.loadFile=!0,scope.uploader.uploadAll()},scope.uploader.onSuccessItem=function(fileItem,response,status,headers){console.log(response),scope.loadFile=!1,200===status?(toastr.success("File upload success"),scope.newNote.filesShow.push(response),scope.newNote.files.push(response._id),scope.loadSuccess=!0):toastr.warning("Error file upload")},scope.getUsers=function(){$http.get("/api/users").then(function(response){scope.users=response.data,console.log(response)},function(response){})},scope.getUsers(),scope.onFileNote=function(re){console.log(re.file),re.file&&(scope.newNote.filesShow.push(re.file),scope.newNote.files.push(re.file._id))},scope.addNote=function(isValid){scope.error=null;var date=new Date(scope.newNote.date),followupdate=new Date(scope.newNote.followup);date.setUTCHours(12,0,0,0),followupdate.setUTCHours(12,0,0,0);var note={date:date,article:scope.article._id,content:scope.newNote.text,type:scope.newNote.type,title:scope.newNote.title,_case:scope.file._id,files:scope.newNote.files,followUp:followupdate,assign:scope.newNote.assign};return scope.loadFile?void toastr.warning("Uploading file..."):void $http.post("/api/articles/note",note).then(function(response){console.log(response),toastr.success("New note Saved"),scope.newNote={},scope.newNoteId=response.data.id,scope.uploader.clearQueue(),scope.loadSuccess=!1,scope.newNote.filesShow=[],scope.file={};for(var k in response.data.files)scope.files.push(response.data.files[k]);"closing"===note.type&&closeFile()},function(response){scope.data=response.data||"Request failed",toastr.error("Error adding new note")})},element.css({position:"relative",cursor:"pointer",zIndex:8888});var myEl=angular.element(document.querySelector("#some-id"));myEl.on("mousedown",function(event){event.preventDefault(),startX=event.pageX-x,startY=event.pageY-y,$document.on("mousemove",mousemove),$document.on("mouseup",mouseup)})}}}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{templateUrl:"modules/articles/client/views/list-articles.client.view.html",url:"/list",data:{roles:["user","user2","admin2","admin"]}}).state("articles.create",{url:"/create",templateUrl:"modules/articles/client/views/create-article.client.view.html",data:{roles:["admin1","admin2","admin"]}}).state("articles.fields",{url:"/fields",templateUrl:"modules/articles/client/views/edit-fields.client.view.html",data:{roles:["admin1","admin2","admin"]}}).state("articles.bulk",{url:"/bulk",templateUrl:"modules/articles/client/views/bulk.client.view.html",data:{roles:["admin1","admin2","admin"]}})}]),angular.module("articles").controller("articleActionController",["$scope","$location","$timeout","Articles","$http","Authentication","FileUploader","toastr","$filter","$window","ngDialog","fileUpload","$sce","$rootScope",function($scope,$location,$timeout,Articles,$http,Authentication,FileUploader,toastr,$filter,$window,ngDialog,fileUpload,$sce,$rootScope){function addFields(){var fields=$scope.fields,file=$scope.article,save=!1,count=0;for(var k in file)"object"==typeof file[k]&&null!==file[k]&&file[k].hasOwnProperty("value")&&count++;for(var i in fields){file.hasOwnProperty(fields[i].key)||(file[fields[i].key]={id:fields[i],value:""},toastr.info("New Field Added: "+fields[i].name),save=!0)}$scope.article=file,$scope.article_sort=sortFields(file),$scope.article.legacy||($scope.article.legacy=[]),$scope.article.legacy.push({created:""}),save===!0&&$scope.sendEditArticle(!0)}function sortFields(input){var array=[],other_arr=[];for(var objectKey in input)void 0!==objectKey&&angular.isObject(input[objectKey])&&"permissions"!==objectKey&&"legacy"!==objectKey?array.push(input[objectKey]):other_arr.push(input[objectKey]);return array.sort(function(a,b){return null===a.id||null===b.id?0:a.id.order-b.id.order}),array}function closeFile(){$scope.article.DateClosedFocusInformation.value=new Date,$scope.sendEditArticle(!0),toastr.info("Claimate Closed")}function tickPremissions(){for(var k in $scope.users)for(var i in $scope.article.permissions)$scope.users[k]._id===$scope.article.permissions[i]._id&&($scope.users[k].ticked=!0);var permissions=angular.copy($scope.article.permissions),ids=permissions.map(function(obj){return obj._id});$scope.permissions=permissions.filter(function(value,index,self){return ids.indexOf(value._id)===index})}$scope.article=$scope.ngDialogData.article,$scope.fields=$scope.ngDialogData.fields,$scope.cats=$scope.ngDialogData.cats,$scope.users=$scope.ngDialogData.users,$scope.loadFile=!1,$scope.loadSuccess=!1,$scope.editDoc=null,$scope.notes=[],$scope.authentication=Authentication,$scope.sortType="date",$scope.emailAttachment=[],$scope.newNote={files:[],filesShow:[],date:new Date},$scope.editNote={files:[]},$scope.dropdoc={perPage:8,n:0,search:!1,sortType:"date",sortReverse:!0},$scope.allFiles=[],$scope.sortReverse=!0,$scope.date=new Date,$scope.calculator={},$scope.isLegacy=!1,$scope.loading=!1,$scope.confirmLegacy="",$scope.permissions=[];var fileAction="",uploadType={};$scope.froalaOptions={toolbarButtons:["bold","italic","underline","strikeThrough","fontSize","fontFamily","color","|","formatBlock","blockStyle","align","insertOrderedList","insertUnorderedList","outdent","indent","|","createLink","insertImage","insertVideo","insertHorizontalRule","undo","redo","html"],key:"md1hkC-11ydbdmcE-13dvD1wzF-7=="},$scope.uploaderDoc=new FileUploader({url:"/api/exports/renderDoc/"+$scope.article._id,alias:"docRender",responseType:"buffer",removeAfterUpload:!0}),$scope.bAllowedToChangeInfo=!1,-1===$scope.authentication.user.roles.indexOf("admin2")&&-1===$scope.authentication.user.roles.indexOf("admin")||($scope.bAllowedToChangeInfo=!0),$scope.uploaderDoc.onSuccessItem=function(fileItem,response,status,headers){console.log(response);var aTag=(new Blob([response.base64],{type:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"}),document.createElement("a"));aTag.setAttribute("href",response.content),aTag.setAttribute("download","template.docx"),aTag.setAttribute("id","docxtrigger"),aTag.setAttribute("target","_self"),aTag.click(),toastr.success("File Rendered"),$scope.getFiles()},$scope.removeAttachment=function(i){$scope.note.files.splice(i,1),$scope.emailAttachment.splice(i,1)},$scope.uploader=new FileUploader({url:$scope.uploadApiUrl,alias:"uploadFile"}),$scope.uploader.onAfterAddingFile=function(){$scope.loadFile=!0,$scope.uploader.uploadAll()},$scope.changeUploadType=function(action,para){fileAction=action,uploadType.note=para.note,uploadType.followup=para.followup,uploadType["case"]=para["case"],uploadType.id=para.id,"newFileNote"===fileAction?$scope.uploader.url="/api/dropdpc/uploadfile":"modifyFile"===action?$scope.uploader.url="/api/dropdpc/modifyfile":"newEmailAttachment"===action?$scope.uploader.url="/api/dropdpc/uploadfile":"newCaseFile"===fileAction?$scope.uploader.url="/api/dropdpc/uploadfile":"editNote"===action?$scope.uploader.url="/api/dropdpc/uploadfile":toastr.error("Error in file upload"),$scope.uploader.formData=[uploadType]},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){if(console.log(response),$scope.loadFile=!1,200===status){if(toastr.success("File upload success"),"newFileNote"===fileAction)$scope.newNote.filesShow.push(response),$scope.newNote.files.push(response._id);else if("modifyFile"===fileAction){console.log("modifyFile");for(var k in $scope.files)$scope.files[k]._id===response._id&&($scope.files.splice(k,1),$scope.files.push(response),$scope.allFiles.push(response))}else"newEmailAttachment"===fileAction?($scope.note.files.push({originalName:response.originalName,url:response.Location}),$scope.files.push(response),$scope.emailAttachment.push(response)):"newCaseFile"===fileAction?($scope.files.push(response),$scope.allFiles.push(response),$scope.searchAndDisplay("")):"editNote"===fileAction&&$scope.editNote.files.push(response);$scope.loadSuccess=!0,$scope.getFiles()}else toastr.warning("Error file upload")},$scope.cancelUpload=function(){$scope.uploader.clearQueue()},$scope.deleteFileDropdoc=function(id,i){$http["delete"]("/api/dropdpc/deletefile/"+id).then(function(response){console.log(response),""!==response.data?(toastr.success("Delete File Suceess"),$scope.files.splice(i,1)):toastr.error("Delete failed")},function(response){toastr.error("Error Deleting file")})},$scope.sendNoteByEmail=function(email,id){toastr.info("Sending email..."),console.log(email,id),$http.get("/api/exports/sendNoteByEmail/"+id+"/"+email).then(function(response){console.log(response),"ok"===response.data?toastr.success("Email sent"):toastr.error("Sending failed")},function(response){toastr.error("Error sending email")})},$scope.getFiles=function(){$http.get("/api/dropdpc/getbyclaimant/"+$scope.article._id).then(function(response){$scope.files=response.data,$scope.allFiles=response.data,$scope.pageLength=Math.ceil(response.data.length/$scope.dropdoc.perPage),$scope.seize(0)},function(response){toastr.error("Error Loading files")})},$scope.splitFields=function(){$scope.allArticles=[];var obj={};for(var k in $scope.fields){var found=!1;for(var i in $scope.article){var currentFiedld;if(i===$scope.fields[k].key){if("_id"===i||"user"===i||"__v"===i||"$$hashKey"===i)continue;currentFiedld=$scope.fields[k],found=!0,obj={key:i,value:article[i],type:currentFiedld.type,name:currentFiedld.name},$scope.allArticles.push(obj)}}}},$scope.onlyCategory=function(cat,item){return item.id.category!==cat},$scope.sendEditArticle=function(isValid){$scope.article.permissions=angular.copy($scope.permissions),console.log("permissions: ",$scope.permissions);var send=angular.copy($scope.article);delete send.legacy,$http.put("/api/articles/"+$scope.article._id,send).then(function(response){toastr.success("Claimant Saved")},function(response){toastr.error("Error Saving")})},$scope.permissionsChange=function(data){if(0===$scope.permissions.length)return void $scope.permissions.push({_id:data._id,displayName:data.displayName});for(var k in $scope.permissions)if($scope.permissions[k]._id===data._id)return void $scope.permissions.splice(Number(k),1);$scope.permissions.push({_id:data._id,displayName:data.displayName})},$scope.addNote=function(isValid){$scope.error=null;var date=new Date($scope.newNote.date),followupdate=new Date($scope.newNote.followup);date.setUTCHours(12,0,0,0),followupdate.setUTCHours(12,0,0,0);var note=new Articles({date:date,article:$scope.article._id,content:$scope.newNote.text,type:$scope.newNote.type,title:$scope.newNote.title,_case:$scope.ngDialogData.article._id,files:$scope.newNote.files,followUp:followupdate,assign:$scope.newNote.assign});return $scope.loadFile?void toastr.warning("Uploading file..."):void $http.post("/api/articles/note",note).then(function(response){$scope.sendEditArticle(!0),console.log(response),toastr.success("New note Saved"),$scope.notesUnfilter.push(response.data),$scope.newNote={files:[]},$scope.newNoteId=response.data.id,$scope.uploader.clearQueue(),$scope.loadSuccess=!1,$scope.newNote.filesShow=[],$scope.searchAndDisplay(),$scope.emailAttachment=[];for(var k in response.data.files)$scope.files.push(response.data.files[k]);"closing"===note.type&&closeFile()},function(response){$scope.data=response.data||"Request failed",toastr.error("Error adding new note")})},$scope.getNotes=function(){$http.get("/api/articles/note/"+$scope.article._id).then(function(response){$scope.notesUnfilter=response.data;for(var k in response.data)null!==response.data[k].date&&(response.data[k].date=new Date(response.data[k].date)),null!==response.data[k].followUp&&(response.data[k].followup=new Date(response.data[k].followUp));$scope.searchAndDisplay()},function(response){$scope.data=response.data||"Request failed"})},$scope.deleteNote=function(note){$scope.canEditNote(note)&&(note=note._id,$http["delete"]("/api/articles/note/"+note).then(function(response){"OK"===response.statusText&&toastr.warning("Note deleted"),$("#"+note).fadeOut(300,function(){$(this).remove()})},function(response){$scope.data=response.data||"Request failed"}))},$scope.deleteFollowUp=function(note){$scope.canEditNote(note)&&(note=note._id,$http["delete"]("/api/notes/followup/"+note).then(function(response){"OK"===response.statusText&&toastr.warning("Note deleted"),$("#"+note).fadeOut(300,function(){$(this).remove()})},function(response){$scope.data=response.data||"Request failed"}))},$scope.update=function(isValid){$scope.error=null;var article=$scope.article;article.permissions=$scope.permissions,article.console.log("per:   ",$scope.permissions),article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.getFollowUp=function(){$http.get("/api/notes/followup/"+$scope.article._id).then(function(response){$scope.followup=response.data;for(var k in $scope.followup);},function(response){$scope.data=response.data||"Request failed"})},$scope.updateAllNotes=function(){$scope.getNotes(),$scope.getFollowUp()},$scope.exportArticleToPdf=function(){var art=$scope.article,art2=sortFields($scope.article),obj=($scope.notes,{}),html="<div style='font-family:arial;'>";html+='<div><font style="font-size:30px">'+art.FirstnameContact.value+" "+art.LastnameContact.value+"</font></div><br>",html+='<div><font style="font-size:24px">Claim #'+art.ClaimContact.value+"</font></div><br>",html+='<div><font style="font-size:24px">DOI '+$filter("date")(art.DOIContact.value,"MM/dd/yy")+"</font></div><br><br>";for(var k in art2)!art2[k].hasOwnProperty("id")||""===art2[k].value||" "===art2[k].value||"NorthorCentralorStatewideFocusInformation"===art2[k].id.key||"DateassignedFocusInformation"===art2[k].id.key||"System"===art2[k].id.category||angular.isUndefined(art2[k].value)||angular.isUndefined(art2[k].id.category)||(obj.hasOwnProperty(art2[k].id.category)||(obj[art2[k].id.category]=[]),"date"===art2[k].id.type?obj[art2[k].id.category].push({name:art2[k].id.name.replace(/(\r\n|\n|\r)/gm,""),value:$filter("date")(art2[k].value,"MM/dd/yy")}):"text"!==art2[k].id.type&&"dropdown"!==art2[k].id.type||"FirstnameContact"===art2[k].id.key||"LastnameContact"===art2[k].id.key||obj[art2[k].id.category].push({name:art2[k].id.name.replace(/(\r\n|\n|\r)/gm,""),value:art2[k].value.replace(/(\r\n|\n|\r)/gm,"")}),console.log(obj[art2[k].id.category]));html+="<div>";for(var k in obj)if("Contact"===k)for(var i in obj[k])html+="<p style='margin:0px'>"+obj[k][i].name+" : "+obj[k][i].value+"</p><br>";html+="</div>";for(var k in obj)if("Contact"!==k){html+="<p><font style='font-size:24px;'>"+k+"</font><br></p>";for(var i in obj[k])html+="<p style='margin:0px'>"+obj[k][i].name+" : "+obj[k][i].value+"</p><br>"}html+="</div>",console.log(html);var pdf=new jsPDF("p","pt","letter"),margins={top:10,bottom:10,left:40,width:522};pdf.fromHTML(html,margins.left,margins.top,{width:margins.width},function(dispose){pdf.save("Focus-On-Intervention-"+art.FirstnameContact.value+"-"+art.LastnameContact.value+".pdf")},margins)},$scope.decodeHtml=function(text){$scope.render=text;for(var k in $scope.article)if(void 0!==$scope.article[k]&&angular.isObject($scope.article[k])&&"permissions"!==k){var re="**"+$scope.article[k].id.key+"**";$scope.render=$scope.render.replace(re,$scope.article[k].value)}var pdf=new jsPDF("p","pt","letter"),source=$scope.render,specialElementHandlers={"#bypassme":function(element,renderer){return!0}},margins={top:10,bottom:10,left:40,width:522};pdf.fromHTML(source,margins.left,margins.top,{width:margins.width,elementHandlers:specialElementHandlers},function(dispose){pdf.save("Focus-On-Intervention-"+$scope.article.FirstnameContact.value+"-"+$scope.article.LastnameContact.value+".pdf")},margins)},$scope.emailExport=function(){$http.get("/api/templates").then(function(response){$scope.templates=response.data},function(response){})},$scope.editDocFun=function(doc){$scope.tempDoc=doc,$scope.editDoc=doc},$scope.changeStatus=function(note){if($scope.canEditNote(note)){var id=note._id;$http.get("/api/notes/changestatus/"+id).then(function(response){for(var k in $scope.notes)$scope.notes[k]._id===response.data._id&&($scope.notes[k].status=response.data.status)},function(response){})}},$scope.changeEmailSent=function(note){if($scope.canEditNote(note)){var id=note._id;$http.get("/api/notes/change_emailsent/"+id).then(function(response){for(var k in $scope.notes)$scope.notes[k]._id===response.data._id&&($scope.notes[k].email_sent=response.data.email_sent)},function(response){})}},$scope.renderDocument=function(){console.log("here"),$scope.uploaderDoc.uploadAll()},$scope.emailDialog=function(note){$scope.note=note,$scope.emailAttachment=angular.copy(note.files),console.log(note,$scope.note),$scope.dialog2=ngDialog.open({template:"emailTemplate",scope:$scope,className:"ngdialog-overlay ngdialog-custom dialog-medium-size",closeByEscape:!0,showClose:!1,overlay:!1})},$scope.emailDialogDropDoc=function(file){console.log(file),$scope.note={},$scope.note.files=[],$scope.note.files.push(file),$scope.emailAttachment.push(file),$scope.dialog2=ngDialog.open({template:"emailTemplate",scope:$scope})},$scope.sendEmail=function(){console.log($scope.emailAttachment);var att="<br>---<br>Attached files<br>";for(var k in $scope.emailAttachment)att+="<a href='"+$scope.emailAttachment[k].url+"'>"+$scope.emailAttachment[k].originalName+"</a><br>";var sendNote=$scope.note;$scope.emailAttachment.length>0&&(sendNote.content+=att),delete sendNote._case,$http.post("/api/exports/sendNoteByEmail",sendNote).then(function(response){200!==response.status?toastr.warning("Email not sent"):toastr.success("Email Sent Successfully"),$scope.articles=response.data},function(response){$scope.data=response.data||"Request failed"})},$scope.isClosed=function(date){return angular.isDate(date)},$scope.openFile=function(){$scope.article.DateClosedFocusInformation.value="",toastr.info("Claimate Open")},$scope.deleteFile=function(item){"DELETE"!==!$scope.confirm&&$http["delete"]("/api/articles/"+item._id).then(function(response){toastr.info("Claimate deleted")},function(response){})},$scope.flipSortReverse=function(){$scope.sortReverse=!$scope.sortReverse},$scope.searchAndDisplay=function(){$scope.isNotesReady=!1,$scope.notes=$scope.notesUnfilter,$scope.notes=$filter("filter")($scope.notes,{$:$scope.search});var regular=[],prior=[];for(var k in $scope.notes)"newInfo"===$scope.notes[k].type?prior.push($scope.notes[k]):regular.push($scope.notes[k]);console.log("sortReverse",$scope.sortReverse),prior=$filter("orderBy")(prior,"date",$scope.sortReverse),regular=$filter("orderBy")(regular,"date",$scope.sortReverse),$scope.notes=prior.concat(regular),$scope.isNotesReady=!0},$scope.canEditNote=function(note){if(-1!==$scope.authentication.user.roles.indexOf("admin"))return!0;if(-1!==$scope.authentication.user.roles.indexOf("admin1"))return!1;if(note.creator.hasOwnProperty("_id")&&note.creator._id==$scope.authentication.user._id||!note.creator.hasOwnProperty("_id")&&note.creator==$scope.authentication.user._id){var createdAt=new Date(note.created).getTime(),now=(new Date).getTime();if(parseInt(now)-parseInt(createdAt)<864e5)return!0}return!1},$scope.updateNote=function(i){$http.post("/api/notes",$scope.editNote).then(function(response){toastr.success("Success Updating Note")},function(response){$scope.data=response.data||"Request failed",toastr.error("Error update ")})},$scope.editNoteDialog=function(note){$scope.editNote=note,$scope.dialog3=ngDialog.open({template:"editNoteTemplate",scope:$scope})},$scope.showPdfDialog=function(url){console.log(url);var config={headers:{"X-Testing":"testing","Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Origin":"*",responseType:"arraybuffer"},responseType:"arraybuffer"};$scope.loadingPdf=!0,$http.get(url,config).success(function(response){$scope.loadingPdf=!1;var file=new Blob([response],{type:"application/pdf"}),fileURL=URL.createObjectURL(file);$scope.url=$sce.trustAsResourceUrl(fileURL)}),$scope.dialog4=ngDialog.open({template:"PdfTemplate",scope:$scope})},$scope.checkIfPdf=function(name){return/\.(pdf|PDF)$/.test(name)},$scope.docCaseFilter=function(item){return""!==item["case"]||null!==item["case"]},$scope.seize=function(n){var lowEnd=n*$scope.dropdoc.perPage,highEnd=n*$scope.dropdoc.perPage+$scope.dropdoc.perPage,arr=[],bigArray=[];bigArray=$scope.dropdoc.search===!0?$scope.searchFiles:$scope.allFiles;for(var i=lowEnd;highEnd>i;i++)void 0!==bigArray[i]&&arr.push(bigArray[i]);$scope.dropdoc.n=n,$scope.files=arr},$scope.dropdocPrev=function(){console.log("prev"),$scope.dropdoc.n<1||$scope.seize($scope.dropdoc.n-1)},$scope.dropdocNext=function(){$scope.dropdoc.n>$scope.pageLength||$scope.seize($scope.dropdoc.n+1)},$scope.dropdoc.searchAndDisplay=function(value){return void 0===value||""===value?($scope.pageLength=Math.ceil($scope.allFiles.length/$scope.dropdoc.perPage),$scope.dropdoc.search=!1,void $scope.orderDropdoc()):($scope.files=$filter("filter")($scope.allFiles,value),$scope.searchFiles=$scope.files,$scope.pageLength=Math.ceil($scope.files.length/$scope.dropdoc.perPage),$scope.dropdoc.search=!0,void $scope.orderDropdoc())},$scope.orderDropdoc=function(){$scope.allFiles=$filter("orderBy")($scope.allFiles,$scope.dropdoc.sortType,$scope.dropdoc.sortReverse),$scope.seize(0)},$scope.calculator.changeDate=function(){$scope.calc1Error=!0,console.log($scope.selectToday);var unix2,unix1;$scope.selectToday?($scope.date2=new Date,unix2=(new Date).getTime()/1e3):($scope.date2=$scope.article[$scope.calculator.endingDate.key].value,unix2=$scope.date2.getTime()/1e3),$scope.date1=$scope.article[$scope.calculator.startingDate.key].value,unix1=$scope.date1.getTime()/1e3,$scope.diff=Math.ceil((unix2-unix1)/9e4),console.log($scope.diff),$scope.diff<0?$scope.calc1Error=!0:$scope.calc1Error=!1},$scope.formatString=function(format){var day=parseInt(format.substring(0,2)),month=parseInt(format.substring(3,5)),year=parseInt(format.substring(6,10)),date=new Date(year,month-1,day);return date},$scope.pushToEndingDate=function(){},$scope.printDiv=function(note){var popupWin=window.open("","_blank","width=500,height=500"),date=$filter("date")(note.date,"MM/dd/yyyy mm:HH"),content="<br><div style=''><b>On:</b> "+date+"<br> <b>To:</b> "+note.to+"<br> <b>cc: </b>"+note.cc+"<br> <b>bcc:</b> "+note.bcc+"<br><b>Subject:</b>"+note.title+"<br> <b>Content:</b> <br>"+note.content+"</div>";popupWin.document.open(),popupWin.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">'+content+"</body></html>"),popupWin.document.close()},$scope.loadlegacy=function(i){console.log(i),""!==i.created&&($scope.article_sort=sortFields(i),console.log($scope.legacy,i),$scope.isLegacy=!0)},$scope.disableLegacy=function(){$scope.article_sort=sortFields($scope.article),$scope.isLegacy=!1},$scope.createLegacy=function(i){"LEGACY"===i&&($scope.loading=!0,$http.get("/api/articles/addlegacy/"+$scope.article._id).then(function(response){$scope.loading=!1,toastr.success("Legacy Created"),$scope.article=response.data,$scope.legacy.push(""),$scope.article_sort=sortFields($scope.article);for(var k in $scope.article_sort)"Contact"!==$scope.article_sort[k].id.category&&("date"!==$scope.article_sort[k].id.type?$scope.article_sort[k].value="":$scope.article_sort[k].value=null)},function(response){$scope.loading=!1,toastr.error("To Many Legacies")}))},$scope.onFile=function(re){console.log(re.file),re.file&&($scope.note.files.push(re.file),$scope.emailAttachment.push(re.file))},$scope.onFileNote=function(re){console.log(re.file),re.file&&$scope.editNote.files.push(re.file)},$scope.onFileNote2=function(re){console.log(re.file),re.file&&($scope.newNote.filesShow.push(re.file),$scope.newNote.files.push(re.file._id))},$scope.updateAllNotes(),$scope.getFiles(),$scope.emailExport(),addFields(),tickPremissions()}]),angular.module("articles").controller("articleController",["$scope","$state","$stateParams","$location","Authentication","Articles","$http","ngDialog","$timeout","toastr","FileUploader","$rootScope","$filter","$sce",function($scope,$state,$stateParams,$location,Authentication,Articles,$http,ngDialog,$timeout,toastr,FileUploader,$rootScope,$filter,$sce){
function getSearchHistory(){$http.get("/api/articles/searchhistory").then(function(response){$scope.searchHistory=response.data},function(response){})}$scope.authentication=Authentication,$scope.fields=[],$scope.smartList=[],$scope.articles=[],$scope.articlesPart=[],$scope.cats=[],$scope.users=[],$scope.search=!1,$scope.sortType="LastnameContact.value",$scope.searchText="Find All",$scope.closed="open",$scope.date=new Date,$scope.searchHistory={},$scope.claimCheck=!1;var claim,date=new Date;$scope.minDate=date.setDate((new Date).getDate()),$scope.newDate=function(date){return new Date(date)},$scope.tableOrder=[],$scope.bAllowedToChangeCaseInfo="XXX",$timeout(function(){$scope.$apply(function(){$scope.bAllowedToChangeCaseInfo="YYY"})},500),console.log("Allowed",$scope.bAllowedToChangeCaseInfo),$scope.catFilter=function(cat){return"Contact"===cat},$scope.smartSearchParams=function(type){$scope.smartSearch.type=type,console.log("type: "+type)},$scope.onFile=function(file){console.log(file)},$scope.getFields=function(){$http.get("/api/fields/all-fields").then(function(response){$scope.fields=response.data,$rootScope.fields=response.data,$scope.requiredFileds=[],$scope.otherFileds=[];for(var k in $scope.fields)"_id"!==k&&"user"!==k&&("Contact"===$scope.fields[k].category?$scope.requiredFileds.push($scope.fields[k]):$scope.otherFileds.push($scope.fields[k]));for(var j in response.data){var found=!1;for(var i in $scope.cats)$scope.cats[i]===response.data[j].category&&(found=!0);found===!1&&$scope.cats.push(response.data[j].category)}},function(response){$scope.data=response.data||"Request failed"})},$scope.getFields(),$scope.getUsers=function(){-1===$scope.authentication.user.roles.indexOf("admin")&&-1===$scope.authentication.user.roles.indexOf("admin2")||($http.get("/api/users").then(function(response){$scope.users=response.data,$rootScope.users=response.data},function(response){console.log(response)}),$scope.example1model=[])},$scope.getUsers(),$scope.addLineToSmartSearch=function(){return""!==$scope.smartSearch.option&&$scope.smartSearch.option?""!==$scope.smartSearch.currentField&&$scope.smartSearch.currentField?""!==$scope.smartSearch.input&&$scope.smartSearch.input?($scope.smartList.push({type:$scope.smartSearch.currentField.type,field:$scope.smartSearch.currentField.key,link:$scope.smartSearch.link,option:$scope.smartSearch.option,text:$scope.smartSearch.input,fieldName:$scope.smartSearch.currentField.name}),$scope.smartSearch.field="",$scope.smartSearch.option="",$scope.smartSearch.currentField="",void($scope.smartSearch.input="")):void toastr.warning("Please insert a date/text"):void toastr.warning("Please select field"):void toastr.warning("Please select searching option")},$scope.removeFromSmartList=function(index){console.log(index),$scope.smartList.splice(index,1)},$scope.doSmartSearch=function(){if($scope.smartList.length<1)return void toastr.warning("Please insert at list one searching row");$scope.search=!0;var found=!1;for(var k in $scope.smartList)"DateClosedFocusInformation"===$scope.smartList[k].field&&(found=!0);found||$scope.smartList.push({field:"closed",text:$scope.closed}),$http.post("/api/articles/smart-search",$scope.smartList).then(function(response){$scope.smartList.pop(),$scope.search=!1,0===response.data.length?toastr.warning("No Claimants Found"):toastr.info(response.data.length+" Claimants Found"),console.log(response.data);for(var k in response.data)for(var i in response.data[k])response.data[k][i].id&&"date"===response.data[k][i].id.type&&(response.data[k][i].value=new Date(response.data[k][i].value),0===response.data[k][i].value.getTime()&&(response.data[k][i].value=""));$scope.articles=response.data},function(response){$scope.data=response.data||"Request failed"})},$scope.create=function(isValid){$scope.error=null;var fields={};fields.data=[],fields.permissions=[];var permissions=[];for(var k in $scope.fields){var v;v="undefined"!=typeof $scope.fields[k].undefined||""===$scope.fields[k].undefined?$scope.fields[k].undefined:" ","ClaimContact"===$scope.fields[k].key?fields.data.push({value:claim,id:$scope.fields[k]._id,key:$scope.fields[k].key}):fields.data.push({value:v,id:$scope.fields[k]._id,key:$scope.fields[k].key})}for(var k in $scope.permissions)permissions.push($scope.permissions[k]._id);fields.permissions=permissions;for(var k in $scope.fields)$scope.fields[k].undefined="";$http.post("/api/articles",fields).then(function(response){toastr.success("New Claimant added"),$state.go("articles.create",{},{reload:!0})},function(response){toastr.error("Error adding Claimant"),$scope.data=response.data||"Request failed"})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.find=function(all){var search={};if(!all){for(var k in $scope.requiredFileds)void 0!==$scope.requiredFileds[k].value&&""!==$scope.requiredFileds[k].value&&(search[$scope.requiredFileds[k].key]={value:$scope.requiredFileds[k].value,type:$scope.requiredFileds[k].type});if(0===Object.keys(search).length)return void toastr.warning("Please fill up at list one field")}search.closed=$scope.closed,$scope.search=!0,$http.post("/api/articles/search",search).then(function(response){$scope.search=!1;for(var k in response.data)for(var i in response.data[k])response.data[k][i].id&&"date"===response.data[k][i].id.type&&(response.data[k][i].value=new Date(response.data[k][i].value),0===response.data[k][i].value.getTime()&&(response.data[k][i].value=""));$scope.articles=[],$scope.articles=response.data,0===response.data.length?toastr.warning("No Claimants Found"):toastr.info(response.data.length+" Claimants Found")},function(response){$scope.data=response.data||"Request failed"}),getSearchHistory()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})},$scope.filterArticles=function(){var result={};return angular.forEach($scope.articles,function(value,key){value.hasOwnProperty("secId")||(result[key]=value)}),console.log(result),result},$scope.editArticle=function(article,cats){$scope.dialog=ngDialog.open({template:"editArticle",data:{article:article,cats:cats,users:angular.copy($scope.users),fields:$scope.fields},controller:"articleActionController",closeByEscape:!0,showClose:!1,closeByDocument:!1,className:"ngdialog-overlay ngdialog-custom dialog-medium-size",overlay:!1}),$scope.dialog.setPadding=15},$scope.adaptSearchHistory=function(){if($scope.searchSelect){var params=$scope.searchSelect.params;console.log(params);for(var k in $scope.requiredFileds)$scope.requiredFileds[k].value="";for(var k in params)for(var j in $scope.requiredFileds)$scope.requiredFileds[j].key===k&&$scope.requiredFileds[j].type===params[k].type&&("date"===params[k].type?$scope.requiredFileds[j].value=new Date(params[k].value):$scope.requiredFileds[j].value=params[k].value)}},$scope.checkClaim=function(i){claim=i,null!==i&&""!==i&&$http.get("/api/articles/checkclain/"+i).then(function(response){console.log(response.data),response.data?$scope.claimCheck=!1:($scope.claimCheck=!0,toastr.warning("Claim is not unique"))},function(response){console.log(response)})},$scope.changeSide=function(id){$scope.xxx=id},getSearchHistory()}]),angular.module("articles").controller("bulkController",["$scope","$location","Articles","$http","Authentication","FileUploader","toastr","$filter","$window","ngDialog","fileUpload","$sce",function($scope,$location,Articles,$http,Authentication,FileUploader,toastr,$filter,$window,ngDialog,fileUpload,$sce){$scope.smartList=[],$scope.fields=[],$scope.showFields=[],$scope.getFields=function(){$http.get("/api/fields/all-fields").then(function(response){$scope.fields=response.data})},$scope.getFields(),$scope.addLineToSmartSearch=function(){return""!==$scope.smartSearch.option&&$scope.smartSearch.option?""!==$scope.smartSearch.currentField&&$scope.smartSearch.currentField?""!==$scope.smartSearch.input&&$scope.smartSearch.input?($scope.smartList.push({type:$scope.smartSearch.currentField.type,field:$scope.smartSearch.currentField.key,link:$scope.smartSearch.link,option:$scope.smartSearch.option,text:$scope.smartSearch.input,fieldName:$scope.smartSearch.currentField.name}),$scope.smartSearch.field="",$scope.smartSearch.option="",$scope.smartSearch.currentField="",void($scope.smartSearch.input="")):void toastr.warning("Please insert a date/text"):void toastr.warning("Please select field"):void toastr.warning("Please select searching option")},$scope.removeFromSmartList=function(index){console.log(index),$scope.smartList.splice(index,1)},$scope.doSmartSearch=function(){if($scope.smartList.length<1)return void toastr.warning("Please insert at list one searching row");$scope.search=!0;var found=!1;for(var k in $scope.smartList)"DateClosedFocusInformation"===$scope.smartList[k].field&&(found=!0);found||$scope.smartList.push({field:"closed",text:$scope.closed}),$http.post("/api/articles/smart-search",$scope.smartList).then(function(response){$scope.smartList.pop(),$scope.search=!1,0===response.data.length?toastr.warning("No Claimants Found"):toastr.info(response.data.length+" Claimants Found"),console.log(response.data);for(var k in response.data)for(var i in response.data[k])response.data[k][i].id&&"date"===response.data[k][i].id.type&&(response.data[k][i].value=new Date(response.data[k][i].value),0===response.data[k][i].value.getTime()&&(response.data[k][i].value=""));$scope.articles=response.data},function(response){$scope.data=response.data||"Request failed"})},$scope.affField=function(){if(console.log($scope.filedsList),!($scope.showFields.length>3)){for(var k in $scope.showFields)if($scope.showFields[k]._id===$scope.filedsList._id)return;$scope.showFields.push($scope.filedsList)}},$scope.showField=function(i){for(var k in $scope.showFields){if(!i.id)return!1;if($scope.showFields[k]._id===i.id._id)return!0}return!1},$scope.editSingle=function(i){$http.put("/api/articles/"+$scope.articles[i]._id,$scope.articles[i]).then(function(response){console.log(response.data),"OK"===response.data&&toastr.success("Claimants edit success")})},$scope.editAll=function(){$scope.articles.forEach(function(single,i){console.log(i),$scope.editSingle(i)})},$scope.pushChange=function(index,field){console.log(index,field,field.value);for(var k in $scope.articles[index])console.log($scope.articles[index][k]),$scope.articles[index][k].id._id===field._id&&($scope.articles[index][k].value=field.value);console.log($scope.articles[index])}}]),angular.module("articles").controller("EditArticle",["$scope","$location","Articles","$http","Authentication","toastr",function($scope,$location,Articles,$http,Authentication,toastr){$scope.article=$scope.ngDialogData.article,$scope.fields=$scope.ngDialogData.fields,$scope.cats=$scope.ngDialogData.cats,console.log($scope.article),$scope.onlyCategory=function(cat,item){return item.id.category!==cat},$scope.sendEditArticle=function(isValid){return isValid?(toastr.warning("Please fill up all fields"),!1):void $http.put("/api/articles/"+$scope.article._id,$scope.article).then(function(response){console.log(response),toastr.success("Claimant Saved")},function(response){console.log("no"),toastr.error("Error Saving")})},$scope.addNote=function(isValid){$scope.error=null;var note=new Articles({date:$scope.newNote.date,article:$scope.article._id,content:$scope.newNote.text,type:$scope.newNote.type,title:$scope.newNote.title,_case:$scope.ngDialogData.article._id});$http.post("/api/articles/note",note).then(function(response){console.log(response),toastr.success("New note Saved"),$scope.notes.push(response.data)},function(response){$scope.data=response.data||"Request failed",toastr.success("Error adding new note")})},$scope.getNotes=function(){$http.get("/api/articles/note/"+$scope.article._id).then(function(response){$scope.notes=response.data},function(response){$scope.data=response.data||"Request failed"})},$scope.deleteNote=function(note){$http["delete"]("/api/articles/note/"+note).then(function(response){"OK"===response.statusText&&toastr.warning("Note deleted"),$("#"+note).fadeOut(300,function(){$(this).remove()})},function(response){$scope.data=response.data||"Request failed",console.log($scope.todayNotes)})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","articleForm"),!1;var article=$scope.article;console.log(article),article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.getNotes(),$scope.splitFields()}]),angular.module("articles").controller("FieldsController",["$scope","Authentication","$http","toastr",function($scope,Authentication,$http,toastr){function create(line){$http.post("/api/fields/newfields",line).then(function(response){"OK"===response.statusText&&toastr.success("Fields Added"),$scope.fields.push(response.data)},function(response){})}$scope.authentication=Authentication,$scope.cats=[],$scope.getFields=function(){$http.get("/api/fields/all-fields").then(function(response){$scope.fields=response.data,$scope.splitFileds={};for(var j in response.data){var found=!1;for(var i in $scope.cats)$scope.cats[i]===response.data[j].category&&(found=!0);found===!1&&($scope.cats.push(response.data[j].category),$scope.splitFileds[response.data[j].category]={})}for(var k in $scope.fileds){var cat=$scope.fields[k].category;$scope.splitFileds[cat].push($scope.fields[k])}},function(response){$scope.data=response.data||"Request failed"})},$scope.getFields(),$scope.addLineToFilds=function(){var line={type:"text",required:$scope.newFiled.required,name:$scope.newFiled.value,category:$scope.newFiled.cat,order:1,key:$scope.newFiled.value.replace(/[^A-Z0-9]/gi,"")+$scope.newFiled.cat.replace(/\s+/g,"")};console.log(line),create(line)},$scope.update=function(){var fields=$scope.fields;$http.post("/api/fields",fields).then(function(response){},function(response){})},$scope.showUpdate=function(){toastr.success("Fields Updated")},$scope["delete"]=function(id){$http["delete"]("/api/fields/"+id).then(function(response){if("OK"===response.statusText){toastr.warning("Field deleted");for(var k in $scope.fields)if($scope.fields[k]._id===id){$scope.fields.splice(k,1);break}}},function(response){$scope.data=response.data||"Request failed"})},$scope.moveDown=function(index,cat){var up,down;for(var k in $scope.fields)$scope.fields[k].category===cat&&$scope.fields[k].order===index&&(up=$scope.fields[k]),$scope.fields[k].category===cat&&$scope.fields[k].order===index+1&&(down=$scope.fields[k]);down.order>0&&up.order!==$scope.fields.length&&(up.order++,down.order--,$scope.update());for(var k in $scope.fileds);},$scope.moveUp=function(index,cat){var up,down;for(var k in $scope.fields)$scope.fields[k].category===cat&&$scope.fields[k].order===index&&(up=$scope.fields[k]),$scope.fields[k].category===cat&&$scope.fields[k].order===index-1&&(down=$scope.fields[k]);up.order>0&&up.down!==$scope.fields.length&&(up.order--,down.order++,$scope.update())},$scope.addDropdown=function(item){"dropdown"===item.type&&(item.hasOwnProperty("value")||(item.values=[]))},$scope.addToDropdown=function(item){"dropdown"===item.type&&(item.hasOwnProperty("values")||(item.values=[]),item.values.push(item["new"]),item["new"]="")},$scope.removeFromValues=function(i,item){"dropdown"===item.type&&item.values.splice(i,1)}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("articles").filter("category",function(){return function(input,cat){for(var out=[],i=0;i<input.length;i++)console.log(input),input[i].id.category===cat&&out.push(input[i]);return out}}),angular.module("articles").filter("trusted",["$sce",function($sce){return function(url){return $sce.trustAsResourceUrl(url)}}]),angular.module("calendar",["ngDialog","ui.mask","ui.bootstrap","ui.calendar","ngMaterial"]).run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Calendar",state:"calendar",type:"dropdown",roles:["user","user2","admin2","admin"]}),Menus.addSubMenuItem("topbar","calendar",{title:"Show Calendar",state:"calendar.list",roles:["user","user2","admin2","admin"]})}]),angular.module("calendar").config(["$provide",function($provide){$provide.decorator("taOptions",["taRegisterTool","$delegate",function(taRegisterTool,taOptions){return taRegisterTool("colourRed",{iconclass:"fa fa-square red",action:function(){this.$editor().wrapSelection("forecolor","red")}}),taOptions.toolbar[1].push("colourRed"),taOptions}])}]),angular.module("calendar").config(["$provide",function($provide){$provide.decorator("taOptions",["taRegisterTool","$delegate",function(taRegisterTool,taOptions){return taRegisterTool("colourBlue",{iconclass:"fa fa-square blue",action:function(){this.$editor().wrapSelection("forecolor","blue")}}),taOptions.toolbar[1].push("colourBlue"),taOptions}])}]),angular.module("calendar").config(["$provide",function($provide){$provide.decorator("taOptions",["taRegisterTool","$delegate",function(taRegisterTool,taOptions){return taRegisterTool("colourGreen",{iconclass:"fa fa-square green",action:function(){this.$editor().wrapSelection("forecolor","green")}}),taOptions.toolbar[1].push("colourGreen"),taOptions}])}]),angular.module("calendar").config(["$provide",function($provide){$provide.decorator("taOptions",["taRegisterTool","$delegate",function(taRegisterTool,taOptions){return taRegisterTool("colourGrey",{iconclass:"fa fa-square grey",action:function(){this.$editor().wrapSelection("forecolor","grey")}}),taOptions.toolbar[1].push("colourGrey"),taOptions}])}]),angular.module("calendar").config(["$provide",function($provide){$provide.decorator("taOptions",["taRegisterTool","$delegate",function(taRegisterTool,taOptions){return taRegisterTool("colouryellow",{iconclass:"fa fa-square yellow",action:function(){this.$editor().wrapSelection("forecolor","#F6911E")}}),taOptions.toolbar[1].push("colouryellow"),taOptions}])}]),angular.module("calendar").config(["$provide",function($provide){$provide.decorator("taOptions",["taRegisterTool","$delegate",function(taRegisterTool,taOptions){return taRegisterTool("colourgreyblue",{iconclass:"fa fa-square yellow greyb",action:function(){this.$editor().wrapSelection("forecolor","#8496BA")}}),taOptions.toolbar[1].push("colourgreyblue"),taOptions}])}]),angular.module("calendar").config(["$stateProvider",function($stateProvider){$stateProvider.state("calendar",{"abstract":!0,url:"/calendar",template:"<ui-view/>"}).state("calendar.list",{templateUrl:"modules/calendar/client/views/calendar.client.view.html",url:"/",data:{roles:["user","user2","admin2","admin"]}})}]),angular.module("calendar").controller("CalendarController",["$scope","$stateParams","$location","Authentication","Articles","$http","ngDialog","uiCalendarConfig","$filter","$compile","toastr","FileUploader",function($scope,$stateParams,$location,Authentication,Articles,$http,ngDialog,uiCalendarConfig,$filter,$compile,toastr,FileUploader){function fourDays(obj){if(!obj.date||!obj.originalDate)return!1;var a=moment(obj.date),b=moment(obj.originalDate),diffDays=a.diff(b,"days");return diffDays>3}$scope.authentication=Authentication;var date=new Date,countFollows=(date.getDate(),date.getMonth(),date.getFullYear(),0);$scope.datepicker=new Date,$scope.events=[],$scope.eventSources=[$scope.events],$scope.emailAttachment=[],$scope.followup=[],$scope.uploader=new FileUploader({url:"/api/dropdpc/uploadfile",alias:"uploadFile"}),$scope.cancelUpload=function(){$scope.uploader.clearQueue()},$scope.uploadFile=function(){$scope.loadFile=!0,$scope.uploader.uploadAll()},$scope.uploader.onAfterAddingFile=function(fileItem){$scope.uploader.formData=[{"case":$scope.note._case._id}],$scope.uploadFile()},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.loadFile=!1,200===status?(toastr.success("File upload success"),$scope.emailAttachment.push({url:response.url,name:response.originalName}),$scope.loadSuccess=!0,$scope.loadFile=!1):toastr.warning("Error file upload")},$scope.removeAttachment=function(i){$scope.emailAttachment.splice(i,1)},$scope.alertOnEventClick=function(date,jsEvent,view){$scope.alertMessage=date.title+" was clicked ",console.log(date),$scope.currentFU=date.followup,$scope.sideArticleId=date.userId},$scope.alertOnDrop=function(event,delta,revertFunc,jsEvent,ui,view){$scope.alertMessage="Event Droped to make dayDelta "+delta,console.log(event.start._d),console.log(event.id);var id=event.id,date=event.start._d;$http.get("/api/notes/changedate/"+id+"/"+date).then(function(response){var re=response.data;toastr.success("Date changed"),console.log(re)},function(response){})},$scope.alertOnResize=function(event,delta,revertFunc,jsEvent,ui,view){$scope.alertMessage="Event Resized to make dayDelta "+delta},$scope.addRemoveEventSource=function(sources,source){var canAdd=0;angular.forEach(sources,function(value,key){sources[key]===source&&(sources.splice(key,1),canAdd=1)}),0===canAdd&&sources.push(source)},$scope.remove=function(index){$scope.events.splice(index,1)},$scope.changeView=function(view,calendar){uiCalendarConfig.calendars[calendar].fullCalendar("changeView",view)},$scope.renderCalender=function(calendar){uiCalendarConfig.calendars[calendar]&&uiCalendarConfig.calendars[calendar].fullCalendar("render")},$scope.uiConfig={calendar:{height:1e3,editable:!0,header:{left:"month basicWeek basicDay",center:"title",right:"today prev,next"},eventClick:$scope.alertOnEventClick,eventDrop:$scope.alertOnDrop,eventResize:$scope.alertOnResize,eventRender:$scope.eventRender}},$scope.getNotesByDate=function(){var date;date=new Date($scope.datepicker),date.setHours(12,0,0,0);var show_date=$filter("date")(date,"EEE MMM dd y");$scope.todayNotes=[],$http.get("/api/articles/notesById/"+date).then(function(response){toastr.info(response.data.length+" Note(s)"," Notes for "+show_date);for(var k in response.data)"meeting"===response.data[k].type&&(response.data[k].icon="fa-users",response.data[k]["class"]="meetingNote"),"phone"===response.data[k].type&&(response.data[k].icon="fa-phone",response.data[k]["class"]="phoneNote"),"email"===response.data[k].type&&(response.data[k].icon="fa-envelope",response.data[k]["class"]="emailNote"),"other"===response.data[k].type&&(response.data[k].icon="fa-asterisk",response.data[k]["class"]="otherNote"),"check"===response.data[k].type&&(response.data[k].icon="fa-check",response.data[k]["class"]="checkingNote"),"closing"===response.data[k].type&&(response.data[k].icon="fa-times-circle",response.data[k]["class"]="closingNote"),"employer"===response.data[k].type&&(response.data[k].icon="fa-male",response.data[k]["class"]="employerNote"),"form"===response.data[k].type&&(response.data[k].icon="fa-book",response.data[k]["class"]="formNote"),"physician"===response.data[k].type&&(response.data[k].icon="fa-wheelchair",response.data[k]["class"]="physicianNote");$scope.allNotes=response.data,$scope.searchAndDisplay()},function(response){$scope.data=response.data||"Request failed"})},$scope.getNotesByDate(),$scope.getNotes=function(){$http.get("/api/articles/noteByUser/").then(function(response){$scope.events=[];for(var i=0;i<response.data.length;i++){var ev=response.data[i];for(var k in response.data)"meeting"===ev.type&&(ev["class"]="meetingNote"),"phone"===ev.type&&(ev["class"]="phoneNote"),"email"===ev.type&&(ev["class"]="emailNote"),"other"===ev.type&&(ev["class"]="otherNote"),"check"===ev.type&&(ev["class"]="checkingNote")}},function(response){$scope.data=response.data||"Request failed"})},$scope.getNotes(),$scope.getFollowUpByDate=function(){var date;date=new Date($scope.datepicker),date.setHours(12,0,0,0),$http.get("/api/notes/followupbydate/"+date).then(function(response){$scope.followup=response.data;for(var k in $scope.followup)$scope.todayNotes.push({id:$scope.followup[k].id.id,article:up[k].id.article,"class":"followupNote",content:$scope.followup[k].id.content,created:$scope.followup[k].id.created,creator:$scope.followup[k].id.creator,date:$scope.followup[k].date,followUp:$scope.followup[k].id.followUp,icon:"fa-certificate",title:"Follow Up for "+$scope.followup[k].id.title,type:$scope.followup[k].id.type,url:$scope.followup[k].url})},function(response){$scope.data=response.data||"Request failed"})},$scope.getFollowUp=function(){$scope.events=[],$http.get("/api/notes/followuppagin/"+countFollows).then(function(response){$scope.followup=$scope.followup.concat(response.data.items),response.data.more?(countFollows++,$scope.getFollowUp()):($scope.followup=Angular.copy($scope.followup.concat(response.data.items)),toastr.info($scope.events.length+" Follow up(s)"," Follow ups")),console.log(response.data);for(var k in $scope.followup)if("open"===$scope.followup[k].status&&null!==$scope.followup[k]._case&&null!==$scope.followup[k].id){var Class="followupNote";$scope.followup[k].assigned?Class="assignNote":"priority"===$scope.followup[k].id.type?Class="priorityNote":"invoice"===$scope.followup[k].id.type?Class="invoiceNote":"newInfo"===$scope.followup[k].id.type?Class="newInfoNote":fourDays($scope.followup[k])&&(Class="delayNote"),$scope.events.push({title:$scope.followup[k]._case.FirstnameContact.value+" "+$scope.followup[k]._case.LastnameContact.value,start:new Date($scope.followup[k].date),className:Class,id:$scope.followup[k]._id,followup:$scope.followup[k],userId:$scope.followup[k]._case._id})}uiCalendarConfig.calendars.myCalendar.fullCalendar("removeEvents"),uiCalendarConfig.calendars.myCalendar.fullCalendar("addEventSource",$scope.events)},function(response){$scope.data=response.data||"Request failed"})},$scope.deleteNote=function(note){$http["delete"]("/api/articles/note/"+note).then(function(response){console.log(response),"OK"===response.statusText&&$("#"+note).fadeOut(300,function(){$(this).remove()}),toastr.warning("Note deleted")},function(response){$scope.data=response.data||"Request failed",console.log($scope.todayNotes)})},$scope.sendEmail=function(item){console.log(item);var att="<br>---<br>Attached files<br>";for(var k in $scope.emailAttachment)att+="<a href='"+$scope.emailAttachment[k].url+"'>"+$scope.emailAttachment[k].originalName+"</a><br>";var sendNote=angular.copy(item);$scope.emailAttachment.length>0&&(sendNote.content+=att),delete sendNote._case,$http.post("/api/exports/sendNoteByEmail",sendNote).then(function(response){200!==response.status?toastr.warning("Erro sending email"):toastr.success("Email Sent Successfully")})},$scope.emailDialog=function(note){$scope.emailAttachment=[],console.log(note),$scope.note=note,ngDialog.open({template:"emailTemplate",scope:$scope})},$scope.searchAndDisplay=function(){$scope.todayNotes=$scope.allNotes,$scope.todayNotes=$filter("filter")($scope.allNotes,{$:$scope.search}),console.log($scope.todayNotes)},$scope.changeStatus=function(id,place){$http.get("/api/notes/changestatus/"+id).then(function(response){$scope.todayNotes[place].status=response.data.status},function(response){})},$scope.changeStatus2=function(id){$http.get("/api/notes/changestatus/"+id).then(function(response){$scope.currentFU.status=response.data.status},function(response){})},$scope.$on("$viewContentLoaded",function(){console.log("test")}),$scope.printDiv=function(note){var popupWin=window.open("","_blank","width=500,height=500"),date=$filter("date")(note.date,"MM/dd/yyyy mm:HH"),content="<br><div style=''><b>On:</b> "+date+"<br> <b>To:</b> "+note.to+"<br> <b>cc: </b>"+note.cc+"<br> <b>bcc:</b> "+note.bcc+"<br><b>Subject:</b>"+note.title+"<br> <b>Content:</b> <br>"+note.content+"</div>";popupWin.document.open(),popupWin.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">'+content+"</body></html>"),popupWin.document.close()},$scope.onFile=function(re){console.log(re.file),re.file&&($scope.note.files.push(re.file),$scope.emailAttachment.push(re.file))},$scope.changeSideId=function(id){$scope.sideArticleId=id}}]),angular.module("calendar").factory("Calendar",["$resource",function($resource){return $resource("api/calendar/:calendarId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus","$timeout",function($scope,$state,Authentication,Menus,$timeout){$scope.showLoader=!1,$scope.showSaved=!1,$scope.showError=!1,$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.openMsg=function(type){function closeAll(){$scope.showLoader=!1,$scope.showSaved=!1,$scope.showError=!1}$scope.showLoader=!1,$scope.showSaved=!1,$scope.showError=!1,"err"===type&&($scope.showError=!0),"saved"===type&&($scope.showSaved=!0),$timeout(closeAll,2e3)},$scope.loading=function(){$scope.showLoader=!$scope.showLoader}}]),angular.module("core").controller("HomeController",["$scope","$location","Authentication",function($scope,$location,Authentication){$scope.authentication=Authentication,console.log($scope.authentication),""===$scope.authentication.user?$location.path("/"):-1===$scope.authentication.user.roles.indexOf("admin1")?$location.path("/articles/list"):$location.path("/articles/create")}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",
compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("export",["ngDialog","ui.mask","ui.calendar","ngMaterial"]).run(["Menus"]),angular.module("exports").config(["$stateProvider",function($stateProvider){$stateProvider.state("exports",{"abstract":!0,url:"/exports",template:"<ui-view/>"}).state("exports.list",{templateUrl:"modules/exports/client/views/exports.client.view.html",url:"/"}).state("exports.create",{url:"/create",templateUrl:"modules/exports/client/views/create-article.client.view.html",data:{roles:["user","user2","admin1","admin2","admin"]}}).state("exports.edit",{url:"/:articleId/edit",templateUrl:"modules/exports/client/views/edit-article.client.view.html",data:{roles:["user","user2","admin1","admin2","admin"]}}).state("exports.diplicates",{url:"/duplicates",templateUrl:"modules/exports/client/views/duplicates.client.view.html",data:{roles:["admin1","admin2","admin"]}})}]),angular.module("exports").controller("DoplicatesController",["$scope","$stateParams","$location","Authentication","Articles","$http","$filter",function($scope,$stateParams,$location,Authentication,Articles,$http,$filter){$scope.list=[],$scope.load=!1,$scope.changeStatus=function(){$http.get("/api/exports/finddoplicates/0/8000").then(function(response){for(var k in response.data){var last=[];for(var i in response.data[k])last.push(response.data[k][i]);$scope.list.push(last)}$scope.load=!0},function(response){})},$scope.changeStatus(),$scope["delete"]=function(item){$http["delete"]("/api/articles/"+item._id).then(function(response){},function(response){})}}]),angular.module("exports").controller("ExportsController",["$scope","$stateParams","$location","Authentication","Articles","$http","$filter","toastr",function($scope,$stateParams,$location,Authentication,Articles,$http,$filter,toastr){$scope.spinner=!1,$scope.smartList=[],$scope.cats=[],$scope.csv=function(part){$scope.spinner=!0,$http.get("/api/exports/contacttocsv/"+part).then(function(response){$scope.spinner=!1;var blob=new Blob([response.data],{type:"application/CSV"}),fileName="Contacts-Part-"+part+".csv";saveAs(blob,fileName)},function(response){$scope.spinner=!1,toastr.warning("Error exporting CSV")})},$scope.getFields=function(){$http.get("/api/fields/all-fields").then(function(response){$scope.fields=response.data,$scope.requiredFileds=[],$scope.otherFileds=[];for(var k in $scope.fields)"_id"!==k&&"user"!==k&&("Contact"===$scope.fields[k].category?$scope.requiredFileds.push($scope.fields[k]):$scope.otherFileds.push($scope.fields[k]));for(var j in response.data){var found=!1;for(var i in $scope.cats)$scope.cats[i]===response.data[j].category&&(found=!0);found===!1&&$scope.cats.push(response.data[j].category)}},function(response){$scope.data=response.data||"Request failed"})},$scope.getFields(),$scope.addLineToSmartSearch=function(){if(""===$scope.smartSearch.option||!$scope.smartSearch.option)return void toastr.warning("Please select searching option");if(""===$scope.smartSearch.currentField||!$scope.smartSearch.currentField)return void toastr.warning("Please select field");if("no"===$scope.smartSearch.option);else if(""===$scope.smartSearch.input||!$scope.smartSearch.input)return void toastr.warning("Please insert a date/text");$scope.smartList.push({type:$scope.smartSearch.currentField.type,field:$scope.smartSearch.currentField.key,link:$scope.smartSearch.link,option:$scope.smartSearch.option,text:$scope.smartSearch.input,fieldName:$scope.smartSearch.currentField.name,endingDate:$scope.smartSearch.endingDate}),$scope.smartSearch.field="",$scope.smartSearch.option="",$scope.smartSearch.currentField="",$scope.smartSearch.input="",console.log($scope.smartList)},$scope.removeFromSmartList=function(index){console.log(index),$scope.smartList.splice(index,1)},$scope.doSmartSearch=function(){if($scope.smartList.length<1)return void toastr.warning("Please insert at list one searching row");var found=!1;for(var k in $scope.smartList)"DateClosedFocusInformation"===$scope.smartList[k].field&&"no"!==$scope.smartList[k].option&&(found=!0);found||$scope.smartList.push({field:"closed",text:$scope.closed}),$http.post("/api/exports/contacttocsv",$scope.smartList).then(function(response){$scope.search=!1;var blob=new Blob([response.data],{type:"application/CSV"}),fileName="export.csv";saveAs(blob,fileName)},function(response){$scope.data=response.data||"Request failed"})},$scope.doCalculate=function(){return $scope.smartList.length<1?void toastr.warning("Please insert at list one searching row"):($scope.search=!0,$scope.smartList.push({field:"closed",text:$scope.closed,endingDate:$scope.smartSearch.endingDate}),void $http.post("/api/exports/csvcaculator",$scope.smartList).then(function(response){$scope.removeFromSmartList($scope.smartList.length-1),$scope.search=!1;var blob=new Blob([response.data],{type:"application/CSV"}),fileName="calculator.csv";saveAs(blob,fileName)},function(response){$scope.data=response.data||"Request failed"}))}}]),angular.module("exports").factory("Exports",["$resource",function($resource){return $resource("api/exports/:exportsId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("library",["ngDialog","ui.mask","ngMaterial"]).run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Library",state:"library",type:"dropdown",roles:["user2","admin2","admin"]}),Menus.addSubMenuItem("topbar","library",{title:"Show library",state:"library.list",roles:["user2","admin2","admin"]})}]),angular.module("library").config(["$stateProvider",function($stateProvider){$stateProvider.state("library",{"abstract":!0,url:"/library",template:"<ui-view/>"}).state("library.list",{templateUrl:"modules/library/client/views/library.client.view.html",url:"/",data:{roles:["user2","admin2","admin"]}})}]),angular.module("library").controller("libraryController",["$scope","$stateParams","$location","Authentication","Articles","$http","ngDialog","$filter","$compile","toastr","FileUploader","$sce",function($scope,$stateParams,$location,Authentication,Articles,$http,ngDialog,$filter,$compile,toastr,FileUploader,$sce){var fileUrl;$scope.jobs=[],$scope.loadFile=!1,$scope.loadSuccess=!1,$scope.newJob={},$scope.file=!1,$scope.uploader=new FileUploader({url:"api/jobs/file",alias:"libraryFile",removeAfterUpload:!0}),$scope.cancelUpload=function(){$scope.uploader.clearQueue()},$scope.uploadFile=function(){$scope.loadFile=!0,$scope.uploader.uploadAll()},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){console.log(response),$scope.loadFile=!1,200===status?(toastr.success("File upload success"),fileUrl=response,$scope.file=response,$scope.newJob.file=response,$scope.loadSuccess=!1,$scope.loadFile=!1):toastr.warning("Error file upload")},$scope.getJobs=function(){$http.get("/api/jobs").then(function(response){$scope.allJobs=response.data,$scope.searchAndDisplay()})},$scope.getJobs(),$scope.addJob=function(){return console.log($scope.newJob),""===$scope.newJob.title||""===$scope.newJob.descritpion?void toastr.warning("Please fill all fields"):void $http.post("/api/jobs",$scope.newJob).then(function(response){$scope.file=!1,toastr.success("Job add success"),$scope.newJob="",$scope.jobs.push(response.data)})},$scope.deleteJob=function(job){console.log(job._id),$http["delete"]("/api/jobs/"+job._id).then(function(response){if("OK"===response.statusText)for(var k in $scope.jobs)if($scope.jobs[k]._id===job._id){$scope.jobs.splice(k,1);break}toastr.warning("Job deleted")},function(response){})},$scope.searchAndDisplay=function(){$scope.jobs=$scope.allJobs,$scope.jobs=$filter("filter")($scope.allJobs,{$:$scope.search})},$scope.searchAndDisplay=function(){$scope.jobs=$scope.allJobs,$scope.jobs=$filter("filter")($scope.allJobs,{$:$scope.search})},$scope.showPdfDialog=function(url){console.log(url);var config={headers:{"X-Testing":"testing","Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Origin":"*",responseType:"arraybuffer"},responseType:"arraybuffer"};$scope.loadingPdf=!0,$http.get(url,config).success(function(response){$scope.loadingPdf=!1;var file=new Blob([response],{type:"application/pdf"}),fileURL=URL.createObjectURL(file);$scope.url=$sce.trustAsResourceUrl(fileURL)}),$scope.dialog4=ngDialog.open({template:"PdfTemplate",scope:$scope})},$scope.checkIfPdf=function(name){return/\.(pdf|PDF)$/.test(name)}}]),angular.module("articles").directive("searchDoc",["$http",function($http){return{restrict:"E",template:"<div class='search-dropdoc'><input type='text' ng-model='search' class='form-control'><select ng-options='item.originalName for item in items' ng-model='results' class='form-control' ng-change='select()'></select></div>",scope:{user:"@  ",callback:"="},link:function(scope,elem,attrs){function search(){if(scope.search){var obj={user:attrs.user,search:scope.search};console.log(obj),$http.post("/api/dropdoc/searchuser",obj).then(function(response){scope.items=response.data})}}scope.$watchGroup(["search"],function(newValues,oldValues,scope){search()}),scope.select=function(){scope.callback({file:scope.results})}}}}]),angular.module("library").factory("library",["$resource",function($resource){return $resource("api/library/:libraryId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("template",["ngDialog","ui.mask","ngMaterial","ngAnimate","ngAria","toastr","daterangepicker","angular.filter","ui.bootstrap","mdPickers","isteven-multi-select","textAngular","ngclipboard"]).run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Templates",state:"templates",type:"dropdown",roles:["user","user2","admin2","admin"]}),Menus.addSubMenuItem("topbar","templates",{title:"Templates",state:"templates.list",roles:["user","user2","admin2","admin"]}),Menus.addSubMenuItem("topbar","templates",{title:"Create",state:"templates.create",roles:["user","user2","admin2","admin"]})}]),angular.module("template").config(["$stateProvider",function($stateProvider){$stateProvider.state("templates",{"abstract":!0,url:"/templates",template:"<ui-view/>"}).state("templates.list",{templateUrl:"modules/templates/client/views/templates-list.client.view.html",url:"/list"}).state("templates.create",{url:"/create",templateUrl:"modules/templates/client/views/templates-create.client.view.html",data:{roles:["user","user2","admin2","admin"]}}).state("templates.edit",{url:"/edit/:docId",templateUrl:"modules/templates/client/views/templates-create.client.view.html"})}]),angular.module("template").controller("templatesCreateController",["$scope","$stateParams","$location","Authentication","$http","ngDialog","$filter","$compile","toastr",function($scope,$stateParams,$location,Authentication,$http,ngDialog,$filter,$compile,toastr){$scope.getDoc=function(){$http.get("/api/templates/"+$stateParams.docId).then(function(response){$scope.doc=response.data[0]},function(response){})},$stateParams.docId&&$scope.getDoc(),$scope.getFields=function(){$http.get("/api/fields/all-fields").then(function(response){$scope.fields=response.data,$scope.requiredFileds=[],$scope.otherFileds=[],$scope.cats=[];for(var k in $scope.fields)"_id"!==k&&"user"!==k&&("Contact"===$scope.fields[k].category?$scope.requiredFileds.push($scope.fields[k]):$scope.otherFileds.push($scope.fields[k]));for(var j in response.data){var found=!1;for(var i in $scope.cats)$scope.cats[i]===response.data[j].category&&(found=!0);found===!1&&$scope.cats.push(response.data[j].category)}},function(response){$scope.data=response.data||"Request failed"})},$scope.getFields(),$scope.createDoc=function(){$http.post("/api/templates",$scope.doc).then(function(response){$scope.doc=response.data},function(response){})},$scope.updateDoc=function(){$http.put("/api/templates",$scope.doc).then(function(response){$scope.doc=response.data},function(response){})},$scope.deleteDoc=function(doc){$http["delete"]("/api/templates/"+$scope.doc._id).then(function(response){$scope.getDocs()},function(response){})}}]),angular.module("template").controller("templatesListController",["$scope","$stateParams","$location","Authentication","$http","ngDialog","$filter","$compile","toastr","FileUploader",function($scope,$stateParams,$location,Authentication,$http,ngDialog,$filter,$compile,toastr,FileUploader){$scope.docs=[],$scope.getDocs=function(){$http.get("/api/templates").then(function(response){$scope.docs=response.data,$scope.filteredItems=response.data,$scope.figureOutItemsToDisplay()},function(response){})},$scope.getDocs(),$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.docs,{$:$scope.search})},$scope.deleteDoc=function(doc){$http["delete"]("/api/templates/"+doc._id).then(function(response){$scope.getDocs()},function(response){})}}]),angular.module("template").factory("template",["$resource",function($resource){return $resource("api/template/:templateId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"}),Menus.addSubMenuItem("topbar","admin",{title:"Download CSV",state:"csv",roles:["admin"]}),Menus.addSubMenuItem("topbar","admin",{title:"Find Duplicates",state:"exports.diplicates",roles:["admin"]})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","user2","admin1","admin2","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"}).state("csv",{url:"/csvexport",templateUrl:"modules/exports/client/views/csv.client.view.html"}).state("emailhistory",{url:"/emailhistory",templateUrl:"modules/users/client/views/email-history.client.view.html"}).state("fileslist",{url:"/fileslist",templateUrl:"modules/users/client/views/files-list.client.view.html"})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){$scope.bPagination=!1,Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=10,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.bPagination=!1,$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end),$scope.bPagination=!0},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.roles={admin:"Super Admin",admin2:"Admin1",user:"User1",user2:"User2"},$scope.user.$promise.then(function(v){$scope.user.block=v.block.toString(),$scope.user.valid=v.valid.toString(),$scope.user.roles=v.roles[0]}),$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.getRoleName=function(role){return $scope.roles[role]}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator","toastr",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator,toastr){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user||$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){response.valid||toastr.info(response.message)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){toastr.error(response.message)}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("exports").controller("emailshistory",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator","toastr","ngDialog","$filter","FileUploader",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator,toastr,ngDialog,$filter,FileUploader){function getEmails(){$http.get("/api/exports/emailslist").then(function(response){if(0===response.data.length)toastr.warning("No Emails Found");else{for(var k in response.data)response.data[k].cc.replace("/,/"," , "),console.log(response.data[k].cc);$scope.emailsUnfilter=response.data,$scope.searchAndDisplay()}},function(response){$scope.data=response.data||"Request failed"})}$scope.authentication=Authentication,$scope.emailAttachment=[],$scope.uploader=new FileUploader({url:"/api/dropdpc/uploadfile",alias:"uploadFile"}),$scope.cancelUpload=function(){$scope.uploader.clearQueue()},$scope.uploadFile=function(){$scope.loadFile=!0,$scope.uploader.uploadAll()},$scope.uploader.onAfterAddingFile=function(fileItem){$scope.uploader.formData=[],$scope.uploadFile()},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.loadFile=!1,200===status?(console.log(response),toastr.success("File upload success"),$scope.emailAttachment.push({url:response.url,originalName:response.originalName}),$scope.loadSuccess=!0,$scope.loadFile=!1):toastr.warning("Error file upload")},getEmails(),$scope.sendEmail=function(){var sendNote=$scope.note,att="<br>---<br>Attached files<br>";for(var k in $scope.emailAttachment)att+="<a href='"+$scope.emailAttachment[k].url+"'>"+$scope.emailAttachment[k].originalName+"</a><br>";$scope.emailAttachment.length>0&&(sendNote.content+=att),$http.post("/api/exports/sendNoteByEmail",sendNote).then(function(response){0===response.data.length?toastr.warning("No Claimants Found"):toastr.success("Email Sent Successfully"),$scope.articles=response.data},function(response){$scope.data=response.data||"Request failed"})},$scope.emailDialog=function(note){console.log(Authentication),$scope.note=note;var date=$filter("date")(note.date,"MM/dd/yyyy mm:HH");$scope.note.content="<div style='font-family:Helvetica Neue;'><br>------<br><b>From: </b>"+Authentication.user.displayName+" < "+Authentication.user.email+" > <br>  <b>Subject:</b> "+note.title+" <br> <b>Date:</b> "+date+"<br> <b>To:</b> "+note.to+"<br> <b>cc: </b>"+note.cc+"<br><b>Content:</b> <br>"+note.content+"</div>",$scope.note.title=" Forwarded message: "+$scope.note.title,ngDialog.open({template:"emailTemplate",scope:$scope})},$scope.printDiv=function(note){var popupWin=window.open("","_blank","width=500,height=500"),date=$filter("date")(note.date,"MM/dd/yyyy mm:HH"),content="<br><div style=''><b>From:</b>"+Authentication.user.displayName+" <br>  <b>Subject:</b>"+note.title+" </b> <br> <b>Date:</b> "+date+"<br> <b>To:</b> "+note.to+"<br> <b>cc: </b>"+note.cc+"<br> <b>bcc:</b> "+note.bcc+" <b>Content:</b> <br>"+note.content+"</div>";popupWin.document.open(),popupWin.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">'+content+"</body></html>"),popupWin.document.close()},$scope.searchAndDisplay=function(){$scope.emails=$scope.emailsUnfilter,$scope.emails=$filter("filter")($scope.emails,{$:$scope.search}),console.log($scope.emails)},$scope.deleteEmail=function(i){console.log($scope.emails[i]),$http["delete"]("/api/exports/emailslist/"+$scope.emails[i]._id).then(function(response){toastr.success("Email Deleted")},function(response){})}}]),angular.module("exports").controller("filelist",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator","toastr","ngDialog","$filter","FileUploader",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator,toastr,ngDialog,$filter,FileUploader){$scope.authentication=Authentication;var fileAction,itemPerPage=15,list=[],uploadType={};$scope.k,$scope.uploadApiUrl,$scope.uploadTitle="Title",$scope.uploadText="Description",$scope.n=[0,0,0],$scope.getFiles=function(close){$scope.files=[],$scope.types=["case","general","library"],$scope.pageLength=[],$scope.allFiles=[],$scope.search=[!1,!1,!1,!1],$scope.searchFiles=[],$scope.sortReverse=[],$scope.sortType=[],$scope.uploadText,list=[],list[0]=[],list[1]=[],list[2]=[],console.log(list),void 0===close&&(close=!0),$http.get("/api/dropdpc/getforuser/"+close).then(function(response){for(var k in response.data){var inter=response.data[k].type;for(var i in inter)if("case"===inter[i]||"library"===inter[i]||"general"===inter[i]){var j=-1;"case"===inter[i]&&(j=0),"general"===inter[i]&&(j=1),"library"===inter[i]&&(j=2),console.log(j),list[j].push(response.data[k])}}var i=0;for(var k in list)$scope.files.push(list[k]),$scope.pageLength[i]=Math.ceil(list[k].length/10),i++;angular.copy($scope.files,$scope.allFiles),console.log($scope.allFiles);for(var i=0;i<$scope.types.length;i++)$scope.searchAndDisplay("",i);console.log($scope.allFiles)},function(response){toastr.error("Error Loading files")})},$scope.fileFilter=function(type){return function(item){return item.hasOwnProperty(type)?"general"===type?1===item.type.length:-1===item.type.indexOf(type):!1}},$scope.searchAndDisplay=function(value,k){return void 0===value||""===value?($scope.search[k]=!1,void $scope.orderDropdoc(k)):($scope.search[k]=!0,$scope.searchFiles[k]=$filter("filter")($scope.allFiles[k],value),void $scope.orderDropdoc(k))},$scope.seize=function(n,k){$scope.n[k]=n,console.log(n,k);var lowEnd=n*itemPerPage,highEnd=n*itemPerPage+itemPerPage,arr=[],bigArray=[];bigArray=$scope.search[k]===!0?$scope.searchFiles[k]:$scope.allFiles[k],$scope.pageLength[k]=Math.ceil(bigArray.length/itemPerPage);for(var i=lowEnd;highEnd>i;i++)void 0!==bigArray[i]&&arr.push(bigArray[i]);$scope.files[k]=arr},$scope.orderDropdoc=function(k,sortReverse,sortType){$scope.allFiles[k]=$filter("orderBy")($scope.allFiles[k],sortType,sortReverse),$scope.seize(0,k)},$scope.eidtNoteDialog=function(note,articleId){$scope.editNote=note,$scope.editArticleId=articleId,$scope.dialog3=ngDialog.open({template:"editNoteTemplate",scope:$scope})},$scope.uploader=new FileUploader({url:$scope.uploadApiUrl,alias:"uploadFile"}),$scope.uploader.onAfterAddingFile=function(){"newLibraryFile"!==fileAction&&($scope.loadFile=!0,$scope.uploader.uploadAll())},$scope.sendUpload=function(){uploadType.title=$scope.uploadTitle,uploadType.text=$scope.uploadText,$scope.uploader.formData=[uploadType],$scope.loadFile=!0,console.log($scope.uploadTitle,$scope.uploadText),$scope.uploader.uploadAll()},$scope.changeUploadType=function(action,para,k){$scope.k=k,fileAction=action,uploadType.note=para.note,uploadType.followup=para.followup,uploadType["case"]=para["case"],uploadType.id=para.id,uploadType.type=para.type,uploadType.title=$scope.uploadTitle,uploadType.text=$scope.uploadText,"newFileNote"===fileAction?$scope.uploader.url="/api/dropdpc/uploadfile":"modifyFile"===action?$scope.uploader.url="/api/dropdpc/modifyfile":"newEmailAttachment"===action?$scope.uploader.url="/api/dropdpc/uploadfile":"newLibraryFile"===fileAction?$scope.uploader.url="/api/dropdpc/uploadfile":"addFileNote"===fileAction?$scope.uploader.url="/api/dropdpc/uploadfile":toastr.error("Error in file upload"),$scope.uploader.formData=[uploadType]},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){if(console.log(response),$scope.loadFile=!1,200===status){if(toastr.success("File upload success"),"modifyFile"===fileAction){console.log("modifyFile");for(var k in $scope.files[$scope.k])$scope.files[$scope.k][k]._id===response._id&&($scope.files[$scope.k].splice(k,1),$scope.files[$scope.k].push(response),$scope.allFiles[$scope.k].push(response))}else"newEmailAttachment"===fileAction?($scope.note.files.push({originalName:response.originalName,url:response.Location}),$scope.files.push(response)):"newCaseFile"===fileAction?($scope.files.push(response),$scope.allFiles.push(response),$scope.searchAndDisplay("")):"addFileNote"===fileAction?$scope.editNote.files.push(response):"newLibraryFile"===fileAction&&($scope.allFiles[2].push(response),$scope.searchAndDisplay("",2));$scope.uploader.clearQueue(),$scope.uploadTitle="",$scope.uploadText="",$scope.loadSuccess=!0}else toastr.warning("Error file upload")},$scope.updateNote=function(i){$http.post("/api/notes",$scope.editNote).then(function(response){toastr.success("Success Updating Note")},function(response){$scope.data=response.data||"Request failed",toastr.error("Error update ")})},$scope.dropdocPrev=function(k){console.log("prev",$scope.n[k]),$scope.n[k]<1||$scope.seize($scope.n[k]-1,k)},$scope.dropdocNext=function(k){console.log(k),$scope.n[k]>$scope.pageLength[k]||$scope.seize($scope.n[k]+1,k)},$scope.getFiles()}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){
$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin===password})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);